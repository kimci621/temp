import { cn } from '@/lib/utils';
import { Button } from './button';
import { SectionTag } from './section-tag';
import Typography from './typography';
import Image from 'next/image';
import Link from 'next/link';
import { GetDemoDialog } from '../features/get-demo-dialog';

export type TariffCardType = 'free' | 'business';

export function TariffCard({ type }: { type: TariffCardType }) {
  const buttonText = {
    free: '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è',
    business: '–ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–µ–º–æ',
  };

  const labelText = {
    free: '–ù–∞—á–Ω–∏—Ç–µ —Å –º–∞–ª–æ–≥–æ',
    business: '–ú–∞–∫—Å–∏–º—É–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π',
  };

  const labelEmoji = {
    free: 'üöÄ',
    business: 'ü¶æ',
  };

  const titleText = {
    free: '–ù–∞—á–∞–ª—å–Ω—ã–π',
    business: '–ë–∏–∑–Ω–µ—Å',
  };

  const titleColorStyle = {
    free: 'text-(--active-dark)',
    business: 'text-(--fill-white)',
  };

  const subTitleText = {
    free: '–í—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∫—Ä—É—Ç–∏–Ω–≥–∞ ‚Äì –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º!',
    business: '–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Ä–æ—Å—Ç–∞ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
  };

  const subTitleColorStyle = {
    free: 'text-(--text-light)',
    business: 'text-(--fill-white)',
  };

  const descriptionText = {
    free: '–î–ª—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –∏ –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–æ—â–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –±–µ–∑ –ª–∏—à–Ω–∏—Ö –∑–∞—Ç—Ä–∞—Ç. –ò–¥–µ–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ, –µ—Å–ª–∏ —É –≤–∞—Å –Ω–µ–±–æ–ª—å—à–∞—è –∫–æ–º–∞–Ω–¥–∞, –Ω–æ –±–æ–ª—å—à–∏–µ —Ü–µ–ª–∏!',
    business:
      '–î–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã –ø–æ –º–∞–∫—Å–∏–º—É–º—É. –í—ã–±–∏—Ä–∞–π—Ç–µ "–ë–∏–∑–Ω–µ—Å" ‚Äì —Ä–∞–±–æ—Ç–∞–π—Ç–µ –Ω–∞ –ø–æ–ª–Ω–æ–π –º–æ—â–Ω–æ—Å—Ç–∏!',
  };

  const descriptionColorStyle = {
    free: 'text-(--text-light)',
    business: 'text-(--fill-white)',
  };

  const preferences = {
    free: [
      '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º, –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º –ò–ò',
      '–î–æ 2—Ö –ª–∏—Ü–µ–Ω–∑–∏–π',
      '–î–æ 5000 —Ä–µ–∑—é–º–µ –≤ –±–∞–∑–µ',
      '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É –û–°',
    ],
    business: [
      '–í—Å—ë, —á—Ç–æ –≤ "–ù–∞—á–∞–ª—å–Ω–æ–º" + –ò–ò –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
      '–û—Ç 3—Ö –ª–∏—Ü–µ–Ω–∑–∏–π ‚Äì –ø–æ–¥–∫–ª—é—á–∞–π—Ç–µ –≤—Å—é –∫–æ–º–∞–Ω–¥—É',
      '–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—é–º–µ –≤ –±–∞–∑–µ',
      '–û–±—É—á–µ–Ω–∏–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∞–¥–∞–ø—Ç–∞—Ü–∏–∏',
      '–î–æ—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–¥ –≤–∞—à–∏ –∑–∞–¥–∞—á–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É',
      '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –∏ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞',
    ],
  };

  const preferencesColorStyle = {
    free: 'text-(--text-light)',
    business: 'text-(--fill-white)',
  };

  const preferencesCursorColorStyle = {
    free: 'bg-(--active-green)',
    business: 'bg-(--fill-white)',
  };

  const label = (
    <SectionTag
      isLight
      className={'w-fit'}
      emoji={labelEmoji[type]}
      name={labelText[type]}
    />
  );

  const title = (
    <Typography
      variant={'h3-medium'}
      className={cn(titleColorStyle[type])}
    >
      {titleText[type]}
    </Typography>
  );

  const subTitle = (
    <Typography
      variant={'h4-medium'}
      className={cn(subTitleColorStyle[type])}
    >
      {subTitleText[type]}
    </Typography>
  );

  const description = (
    <Typography
      variant={'text'}
      className={cn(descriptionColorStyle[type])}
    >
      {descriptionText[type]}
    </Typography>
  );

  const preferencesList = (
    <ul className={'flex flex-col gap-3 my-3'}>
      {preferences[type].map((preference, idx) => (
        <li
          key={idx.toString()}
          className={'flex items-center gap-4'}
        >
          <span className={cn('w-0.5 h-full rounded-full', preferencesCursorColorStyle[type])} />

          <Typography
            variant={'button'}
            className={cn(preferencesColorStyle[type])}
          >
            {preference}
          </Typography>
        </li>
      ))}
    </ul>
  );

  const price = {
    free: (
      <Typography
        variant={'h4-medium'}
        className={'text-(--active-green) my-10'}
      >
        –ë–µ—Å–ø–ª–∞—Ç–Ω–æ
      </Typography>
    ),
    business: (
      <Typography
        variant={'h4-medium'}
        className={'flex flex-col gap-1 text-(--fill-white) my-10'}
      >
        <p className={'hidden md:block'}>4500 ‚ÇΩ/–º–µ—Å –∑–∞ 1 –ª–∏—Ü–µ–Ω–∑–∏—é</p>
        <p className={'hidden md:block'}>*–ü—Ä–∏ –æ–ø–ª–∞—Ç–µ –Ω–∞ –≥–æ–¥</p>
        <p className={'md:hidden'}>4500 ‚ÇΩ/–º–µ—Å –∑–∞ 1 —Ä–µ–∫—Ä—É—Ç–µ—Ä–∞</p>
      </Typography>
    ),
  };

  const btn = {
    free: (
      <Link
        href={'https://huntlee.ru/main/signup'}
        target={'_blank'}
      >
        <Button
          variant={'secondary'}
          size={'sm'}
          rounded={'default'}
        >
          <Typography variant={'button'}>{buttonText[type]}</Typography>
        </Button>
      </Link>
    ),
    business: (
      <GetDemoDialog
        triggerButton={
          <Button
            variant={'secondary'}
            size={'sm'}
            rounded={'default'}
          >
            <Typography variant={'button'}>{buttonText[type]}</Typography>
          </Button>
        }
      />
    ),
  };

  return (
    <div
      className={'relative overflow-hidden border border-(--border-light) rounded-xl px-10 py-6 flex flex-col gap-3'}
    >
      <div className={'flex flex-col gap-3 h-full'}>
        {label}
        {title}
        {subTitle}
        {description}
        {preferencesList}
      </div>
      {price[type]}
      {btn[type]}

      {type === 'business' && (
        <Image
          src={'/images/bg-business.png'}
          alt={'tariff-card-bg'}
          width={2652}
          height={2652}
          className={'rounded-xl absolute top-0 right-0 scale-160 -z-1 size-full'}
        />
      )}
    </div>
  );
}
